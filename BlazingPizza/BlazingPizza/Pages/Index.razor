@page "/"
@inject HttpClient Http

<div class="main">
    <ul class="pizza-cards">
        @if (specials != null)
        {
            foreach (var special in specials)
            {
                <li style="background-image: url('@special.ImageUrl')" 
                    @onclick="() => ShowConfigurePizzaDialog(special)">
                    <div class="pizza-info">
                        <span class="title">@special.Name</span>
                        @special.Description
                        <span class="price">@special.GetFormattedBasePrice()</span>
                    </div>
                </li>
            }
        }
    </ul>
</div>

@if (showConfigureDialog)
{
    <PizzaDialog Pizza="configuringPizza"
                 OnCancel="CancelConfigurePizzaDialog"
                 OnConfirm="ConfirmConfigurePizzaDialog"/>
}

@code {
    List<PizzaSpecial> specials;
    Pizza configuringPizza;
    bool showConfigureDialog;
    Order order = new Order();

    protected override async Task OnInitializedAsync()
    {
        specials = await Http.GetJsonAsync<List<PizzaSpecial>>("specials");
    }

    void ShowConfigurePizzaDialog(PizzaSpecial special)
    {
        configuringPizza = new Pizza()
        {
            Special = special,
            SpecialId = special.Id,
            Size = Pizza.DefaultSize,
            Toppings = new List<PizzaTopping>()
        };

        showConfigureDialog = true;
    }

    void ConfirmConfigurePizzaDialog()
    {
        order.Pizzas.Add(configuringPizza);
        configuringPizza = null;
        showConfigureDialog = false;
    }

    void CancelConfigurePizzaDialog()
    {
        configuringPizza = null;
        showConfigureDialog = false;
    }
}


